<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Kripto Potansiyel x Değerleri</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.datatables.net/1.11.3/css/dataTables.bootstrap5.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    body {
      background-color: #f8f9fa;
      font-family: Arial, sans-serif;
    }
    .container {
      margin-top: 50px;
    }
    h1 {
      text-align: center;
      margin-bottom: 30px;
      color: #333;
    }
    .chart-container {
      width: 80%;
      margin: auto;
    }
    .table-container {
      margin-top: 50px;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Kripto Potansiyel x Değerleri</h1>
    <div class="chart-container">
      <canvas id="potentialChart"></canvas>
    </div>
    <div class="table-container">
      <table id="cryptoTable" class="table table-striped table-bordered">
        <thead>
          <tr>
            <th scope="col">Coin</th>
            <th scope="col">Tüm Zamanların En Yüksek Değeri (ATH)</th>
            <th scope="col">Şuanki Fiyat</th>
            <th scope="col">Potansiyel x Değeri</th>
          </tr>
        </thead>
        <tbody id="coinTableBody">
        </tbody>
      </table>
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.min.js"></script>
  <script src="https://cdn.datatables.net/1.11.3/js/dataTables.bootstrap5.min.js"></script>
  <script>
    $(document).ready(function() {
      const coins = <%- JSON.stringify(coins) %>;
      const potentialValues = coins.map(coin => {
        return {
          name: coin.name,
          ath: coin.ath,
          current_price: coin.current_price.toFixed(7),
          potential: (coin.ath / coin.current_price).toFixed(7)
        };
      });

      // Potansiyel x Değerlerine göre sıralama
      potentialValues.sort((a, b) => b.potential - a.potential);

      const labels = potentialValues.map(coin => coin.name);
      const sortedPotentialValues = potentialValues.map(coin => coin.potential);
      const backgroundColors = [
        'rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)',
        'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)',
        'rgba(199, 199, 199, 0.2)', 'rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)',
        'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)',
        'rgba(255, 159, 64, 0.2)', 'rgba(199, 199, 199, 0.2)', 'rgba(255, 99, 132, 0.2)',
        'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)',
        'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)', 'rgba(199, 199, 199, 0.2)',
        'rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)',
        'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)',
        'rgba(199, 199, 199, 0.2)', 'rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)'
      ];
      const borderColors = [
        'rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)',
        'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)',
        'rgba(199, 199, 199, 1)', 'rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)',
        'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)',
        'rgba(255, 159, 64, 1)', 'rgba(199, 199, 199, 1)', 'rgba(255, 99, 132, 1)',
        'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)',
        'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)', 'rgba(199, 199, 199, 1)',
        'rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)',
        'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)',
        'rgba(199, 199, 199, 1)', 'rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)'
      ];

      // DataTable'ı güncelle
      const tableBody = $('#coinTableBody');
      potentialValues.forEach(coin => {
        tableBody.append(`
          <tr>
            <td>${coin.name}</td>
            <td>$${coin.ath}</td>
            <td>$${coin.current_price}</td>
            <td>${coin.potential}</td>
          </tr>
        `);
      });

      $('#cryptoTable').DataTable({
        "pageLength": 50,
        "paging": true,
        "searching": true,
        "ordering": true,
        "info": true
      });

      // Chart.js grafiklerini ekle
      const potentialChartContext = document.getElementById('potentialChart').getContext('2d');

      new Chart(potentialChartContext, {
        type: 'bar',
        data: {
          labels: labels,
          datasets: [{
            label: 'Potansiyel x Değeri',
            data: sortedPotentialValues,
            backgroundColor: backgroundColors,
            borderColor: borderColors,
            borderWidth: 1
          }]
        },
        options: {
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
      });
    });
  </script>
</body>
</html>
